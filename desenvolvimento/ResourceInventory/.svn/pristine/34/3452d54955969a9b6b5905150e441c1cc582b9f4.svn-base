/**
 * [TRA3513-50-RI] - Disponibilizar as portas ADSL/VDSL para rede Vivo 2, tecnologia Met√°lico
 * @author robson.junio.d.diniz
 *
 * @since 15 de out de 2018
 */
package com.tlf.oss.resourceinventory.tbs.api.v1_0;

import javax.ejb.Stateless;
import javax.inject.Inject;
import javax.validation.ConstraintViolationException;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

import com.tlf.oss.common.exception.OSSBusinessException;
import com.tlf.oss.common.interceptor.RestInterceptor;
import com.tlf.oss.resourceinventory.schemas.api.ResourceInventoryEntity;
import com.tlf.oss.resourceinventory.schemas.util.RIConstants;
import com.tlf.oss.resourceinventory.tbs.core.DetermineAvailabilityController;
import com.tlf.oss.resourceinventory.tbs.enums.ExceptionInfoEnum;

@Path("/1.0/determineAvailability")
@Stateless
public class DetermineAvailabilityService extends RestInterceptor{

	@Inject
	private DetermineAvailabilityController controller;
	
	@POST
	@Consumes(RIConstants.MEDIA_TYPE_APPLICATION_JSON_UTF8)
	@Produces(RIConstants.MEDIA_TYPE_APPLICATION_JSON_UTF8)
	public Response doExecution(ResourceInventoryEntity entity) throws OSSBusinessException {
		try {
			entity = controller.getDetermine(entity);
			return Response.status(Status.OK).entity(entity).build();
		} catch (ConstraintViolationException | OSSBusinessException e) {
			throw e;
		} catch (Exception e) {
			throw new OSSBusinessException(ExceptionInfoEnum.RITBS_999.getDescription(),
					ExceptionInfoEnum.RITBS_999.getCode(), e.getMessage());
		}
	}
}
