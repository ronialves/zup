package com.tfl.oss.resourceinventory.granite.execution

import java.util.ArrayList;
import java.util.List;

import com.tlf.oss.resourceinventory.granite.core.entity.Rules;
import com.tlf.oss.resourceinventory.schemas.api.ResourceInventoryEntity;
import com.tlf.oss.resourceinventory.schemas.CustomerFacingService;
import com.tlf.oss.resourceinventory.schemas.ServiceDescribedBy;
import com.tlf.oss.resourceinventory.schemas.ServiceSpecCharDescribes;

rule "Regra DSBF16 - 16MBPS com IP FIXO, banda larga solo"
	agenda-group "SERVICECODE"
	when
		$rules : Rules()
		$ruleName : String()

		// Verificamos se cliente tem somente uma cobertura
		$inventoryEntity : ResourceInventoryEntity(customerFacingService.size() < 2)

		// Apenas para servico Banda Larga
		$customerFacingServices : CustomerFacingService(eval(category.equalsIgnoreCase("BROADBAND")))
				 from $inventoryEntity.customerFacingService

		// Apenas IP
		$serviceDescribedBy : ServiceDescribedBy(eval(name.equalsIgnoreCase("IP"))) from $customerFacingServices.serviceDescribedBy

		// Apenas FIXO
		$serviceSpecCharDescribes : ServiceSpecCharDescribes(eval(value.equalsIgnoreCase("FIXED")))
				 from $serviceDescribedBy.serviceSpecCharDescribes

		// Obtemos descricao do Downstream se existir
		$serviceDescribedBy2 : ServiceDescribedBy(eval(name.equalsIgnoreCase("DOWNSTREAM"))) from $customerFacingServices.serviceDescribedBy

		// Obtemos o valor do Downstream se existir
		ServiceSpecCharDescribes((value == "15360") || (value == "16384")) from $serviceDescribedBy2.serviceSpecCharDescribes
	then
		$rules.setResult("DSBF16");
		insert($rules);
end

rule "Regra DSBF05 - 25MBPS com IP FIXO, banda larga solo"
	agenda-group "SERVICECODE"
	when
		$rules : Rules()
		$ruleName : String()

		// Verificamos se cliente tem somente uma cobertura
		$inventoryEntity : ResourceInventoryEntity(customerFacingService.size() < 2)

		// Apenas para servico Banda Larga
		$customerFacingServices : CustomerFacingService(eval(category.equalsIgnoreCase("BROADBAND")))
				 from $inventoryEntity.customerFacingService

		// Apenas IP
		$serviceDescribedBy : ServiceDescribedBy(eval(name.equalsIgnoreCase("IP"))) from $customerFacingServices.serviceDescribedBy

		// Apenas FIXO
		$serviceSpecCharDescribes : ServiceSpecCharDescribes(eval(value.equalsIgnoreCase("FIXED")))
				 from $serviceDescribedBy.serviceSpecCharDescribes

		// Obtemos descricao do Downstream se existir
		$serviceDescribedBy2 : ServiceDescribedBy(eval(name.equalsIgnoreCase("DOWNSTREAM"))) from $customerFacingServices.serviceDescribedBy

		// Obtemos o valor do Downstream se existir
		ServiceSpecCharDescribes(value == "25600") from $serviceDescribedBy2.serviceSpecCharDescribes
	then
		$rules.setResult("DSBF05");
		insert($rules);
end

rule "Regra DSBF50 - 50MBPS com IP FIXO, banda larga solo"
	agenda-group "SERVICECODE"
	when
		$rules : Rules()
		$ruleName : String()

		// Verificamos se cliente tem somente uma cobertura
		$inventoryEntity : ResourceInventoryEntity(customerFacingService.size() < 2)

		// Apenas para servico Banda Larga
		$customerFacingServices : CustomerFacingService(eval(category.equalsIgnoreCase("BROADBAND")))
				 from $inventoryEntity.customerFacingService

		// Apenas IP
		$serviceDescribedBy : ServiceDescribedBy(eval(name.equalsIgnoreCase("IP"))) from $customerFacingServices.serviceDescribedBy

		// Apenas FIXO
		$serviceSpecCharDescribes : ServiceSpecCharDescribes(eval(value.equalsIgnoreCase("FIXED")))
				 from $serviceDescribedBy.serviceSpecCharDescribes

		// Obtemos descricao do Downstream se existir
		$serviceDescribedBy2 : ServiceDescribedBy(eval(name.equalsIgnoreCase("DOWNSTREAM"))) from $customerFacingServices.serviceDescribedBy

		// Obtemos o valor do Downstream se existir
		ServiceSpecCharDescribes(value == "51200") from $serviceDescribedBy2.serviceSpecCharDescribes
	then
		$rules.setResult("DSBF50");
		insert($rules);
end

rule "Regra DSBF60 - 100MBPS com IP FIXO, banda larga solo"
	agenda-group "SERVICECODE"
	when
		$rules : Rules()
		$ruleName : String()

		// Verificamos se cliente tem somente uma cobertura
		$inventoryEntity : ResourceInventoryEntity(customerFacingService.size() < 2)

		// Apenas para servico Banda Larga
		$customerFacingServices : CustomerFacingService(eval(category.equalsIgnoreCase("BROADBAND")))
				 from $inventoryEntity.customerFacingService

		// Apenas IP
		$serviceDescribedBy : ServiceDescribedBy(eval(name.equalsIgnoreCase("IP"))) from $customerFacingServices.serviceDescribedBy

		// Apenas FIXO
		$serviceSpecCharDescribes : ServiceSpecCharDescribes(eval(value.equalsIgnoreCase("FIXED")))
				 from $serviceDescribedBy.serviceSpecCharDescribes

		// Obtemos descricao do Downstream se existir
		$serviceDescribedBy2 : ServiceDescribedBy(eval(name.equalsIgnoreCase("DOWNSTREAM"))) from $customerFacingServices.serviceDescribedBy

		// Obtemos o valor do Downstream se existir
		ServiceSpecCharDescribes(value == "102400") from $serviceDescribedBy2.serviceSpecCharDescribes
	then
		$rules.setResult("DSBF60");
		insert($rules);
end

rule "Regra DSBF11 - 200MBPS com IP FIXO, banda larga solo"
	agenda-group "SERVICECODE"
	when
		$rules : Rules()
		$ruleName : String()

		// Verificamos se cliente tem somente uma cobertura
		$inventoryEntity : ResourceInventoryEntity(customerFacingService.size() < 2)

		// Apenas para servico Banda Larga
		$customerFacingServices : CustomerFacingService(eval(category.equalsIgnoreCase("BROADBAND")))
				 from $inventoryEntity.customerFacingService

		// Apenas IP
		$serviceDescribedBy : ServiceDescribedBy(eval(name.equalsIgnoreCase("IP"))) from $customerFacingServices.serviceDescribedBy

		// Apenas FIXO
		$serviceSpecCharDescribes : ServiceSpecCharDescribes(eval(value.equalsIgnoreCase("FIXED")))
				 from $serviceDescribedBy.serviceSpecCharDescribes

		// Obtemos descricao do Downstream se existir
		$serviceDescribedBy2 : ServiceDescribedBy(eval(name.equalsIgnoreCase("DOWNSTREAM"))) from $customerFacingServices.serviceDescribedBy

		// Obtemos o valor do Downstream se existir
		ServiceSpecCharDescribes(value == "204800") from $serviceDescribedBy2.serviceSpecCharDescribes
	then
		$rules.setResult("DSBF11");
		insert($rules);
end

rule "Regra VBLG14 - 300Mbps com IP FIXO, banda larga solo"
	agenda-group "SERVICECODE"
	when
		$rules : Rules()
		$ruleName : String()

		// Verificamos se cliente tem somente uma cobertura
		$inventoryEntity : ResourceInventoryEntity(customerFacingService.size() < 2)

		// Apenas para servico Banda Larga
		$customerFacingServices : CustomerFacingService(eval(category.equalsIgnoreCase("BROADBAND")))
				 from $inventoryEntity.customerFacingService

		// Apenas IP
		$serviceDescribedBy : ServiceDescribedBy(eval(name.equalsIgnoreCase("IP"))) from $customerFacingServices.serviceDescribedBy

		// Apenas FIXO
		$serviceSpecCharDescribes : ServiceSpecCharDescribes(eval(value.equalsIgnoreCase("FIXED")))
				 from $serviceDescribedBy.serviceSpecCharDescribes

		// Obtemos descricao do Downstream se existir
		$serviceDescribedBy2 : ServiceDescribedBy(eval(name.equalsIgnoreCase("DOWNSTREAM"))) from $customerFacingServices.serviceDescribedBy

		// Obtemos o valor do Downstream se existir
		ServiceSpecCharDescribes(value == "307200") from $serviceDescribedBy2.serviceSpecCharDescribes
	then
		$rules.setResult("VBLG14");
		insert($rules);
end

