package com.tlf.oss.resourceinventory.tbs.api.v1_0;

import com.tlf.oss.common.exception.OSSBusinessException;
import com.tlf.oss.common.interceptor.RestInterceptor;
import com.tlf.oss.common.log.OSSLogger;
import com.tlf.oss.resourceinventory.schemas.api.ResourceInventoryEntity;
import com.tlf.oss.resourceinventory.schemas.util.RIConstants;
import com.tlf.oss.resourceinventory.tbs.core.GatherResourceInformationController;

import javax.inject.Inject;
import javax.ws.rs.Consumes;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.Response.Status;

@Path("/gatherResourceInformation")
public class GatherResourceInformationService extends RestInterceptor {

    @Inject private OSSLogger ossLogger;
    @Inject public GatherResourceInformationController gatherResourceInformationController;

    @POST
    @Consumes(RIConstants.MEDIA_TYPE_APPLICATION_JSON_UTF8)
    @Produces(RIConstants.MEDIA_TYPE_APPLICATION_JSON_UTF8)
    public Response doExecution(ResourceInventoryEntity resourceInventoryEntity) throws OSSBusinessException {
        resourceInventoryEntity = this.gatherResourceInformationController.gatherResource(resourceInventoryEntity);
        return Response.status(Status.OK).entity(resourceInventoryEntity).build();
    }
}
