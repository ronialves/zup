
package com.tlf.oss.resourceinventory.generated.osp.reportresourceprovisioning;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.1.10
 * 2019-08-22T10:32:46.938-03:00
 * Generated source version: 3.1.10
 * 
 */
public final class ReportResourceProvisioning_ReportResourceProvisioningPort_Client {

    private static final QName SERVICE_NAME = new QName("http://www.cpqd.com.br/etics/facilities/ReportResourceProvisioning", "ReportResourceProvisioning");

    private ReportResourceProvisioning_ReportResourceProvisioningPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = ReportResourceProvisioning_Service.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        ReportResourceProvisioning_Service ss = new ReportResourceProvisioning_Service(wsdlURL, SERVICE_NAME);
        ReportResourceProvisioning port = ss.getReportResourceProvisioningPort();  
        
        {
        System.out.println("Invoking distributeResourceProvisioningReports...");
        com.tlf.oss.resourceinventory.generated.osp.reportresourceprovisioning.reportresourceprovisioningtypes.ReportResourceProvisioningRequest _distributeResourceProvisioningReports_inputData = null;
        com.tlf.oss.resourceinventory.generated.osp.reportresourceprovisioning.headercontext.WsContext _distributeResourceProvisioningReports_context = null;
        try {
            com.tlf.oss.resourceinventory.generated.osp.reportresourceprovisioning.reportresourceprovisioningtypes.ReportResourceProvisioningResponse _distributeResourceProvisioningReports__return = port.distributeResourceProvisioningReports(_distributeResourceProvisioningReports_inputData, _distributeResourceProvisioningReports_context);
            System.out.println("distributeResourceProvisioningReports.result=" + _distributeResourceProvisioningReports__return);

        } catch (FacilitiesException e) { 
            System.out.println("Expected exception: facilitiesException has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking distributeFreeResourceTerminalEquipment...");
        com.tlf.oss.resourceinventory.generated.osp.reportresourceprovisioning.reportresourceprovisioningtypes.DistributeFreeResourceTermRequest _distributeFreeResourceTerminalEquipment_inputData = null;
        com.tlf.oss.resourceinventory.generated.osp.reportresourceprovisioning.headercontext.WsContext _distributeFreeResourceTerminalEquipment_context = null;
        try {
            com.tlf.oss.resourceinventory.generated.osp.reportresourceprovisioning.reportresourceprovisioningtypes.DistributeFreeResourceTermResponse _distributeFreeResourceTerminalEquipment__return = port.distributeFreeResourceTerminalEquipment(_distributeFreeResourceTerminalEquipment_inputData, _distributeFreeResourceTerminalEquipment_context);
            System.out.println("distributeFreeResourceTerminalEquipment.result=" + _distributeFreeResourceTerminalEquipment__return);

        } catch (FacilitiesException e) { 
            System.out.println("Expected exception: facilitiesException has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}
